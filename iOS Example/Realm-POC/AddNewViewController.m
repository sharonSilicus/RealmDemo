//
//  AddNewViewController.m
//  Realm-POC
//
//  Created by Sharon Nathaniel on 18/11/15.
//  Copyright Â© 2015 Silicus Technologies India Pvt. Ltd. All rights reserved.
//

#import "AddNewViewController.h"

#import "ApplicationSharedManager.h"

@interface AddNewViewController ()<UITextFieldDelegate, UIAlertViewDelegate>

// IBOutlets
@property (nonatomic, strong) IBOutlet UITextField *projectNameTextField;

@property (nonatomic, strong) IBOutlet UITextField *projectTypeTextField;

@property (nonatomic, strong) IBOutlet UITextField *projectClientTextField;

@property (nonatomic, strong) IBOutlet UITextField *projectManagerTextField;

@property (nonatomic, strong) IBOutlet UISwitch *isActiveSwitch;

@property (nonatomic, strong) IBOutlet UILabel *projectCodeLabel;

@property (nonatomic, strong) IBOutlet UIBarButtonItem *saveBarButtonItem;

@property (nonatomic, strong) IBOutlet UIImageView *editImageView;

@property (nonatomic, strong) IBOutlet UIButton *invisibleEditButton;


// Private Properties
@property (nonatomic, assign) BOOL isEditing;

// -----------------------------------------------------------------------------

@end

@implementation AddNewViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    // Check if project is being viewed
    if (_projectToView) {
        [self fillProjectDetails];
        [self setTitle:@"Project Details"];
        [self.navigationItem setPrompt:@"Following are the"];
        UIImage *image = [UIImage imageNamed:@"Edit-icon.png"];
        _editImageView.image = [image imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];
        [_editImageView setTintColor:[UIColor whiteColor]];
        [_editImageView setHidden:FALSE];
        [_invisibleEditButton setHidden:FALSE];
    }
    else
    {
        [self fillAutogeneratedDetailsForNewProject];
        _isEditing = FALSE;
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark -

#pragma mark -
#pragma mark Misclenious Functions

-(void)fillAutogeneratedDetailsForNewProject
{
    [_projectCodeLabel setText:[self generateProjectCodeFromLastProject:[self fetchLastProjectCreated]]];
}

-(Project *)fetchLastProjectCreated
{
    RLMResults<Project *> *project = [Project allObjects];
    return [project lastObject];
}

-(NSString *)generateProjectCodeFromLastProject:(Project *)lastProject
{
    // Intermediate
    NSString *numberString;
    
    NSScanner *scanner = [NSScanner scannerWithString:lastProject.code];
    NSCharacterSet *numbers = [NSCharacterSet characterSetWithCharactersInString:@"0123456789"];
    
    // Throw away characters before the first number.
    [scanner scanUpToCharactersFromSet:numbers intoString:NULL];
    
    // Collect numbers.
    [scanner scanCharactersFromSet:numbers intoString:&numberString];
    
    // Result.
    int lastProjectnumber = [numberString intValue];
    return [NSString stringWithFormat:@"SOWSIL%06d",(lastProjectnumber+1)];
}

// If Viewing Project then fill the details of the project opened for viewing
-(void)fillProjectDetails
{
    // Fill Details
    [_projectCodeLabel setText:_projectToView.code];
    [_projectNameTextField setText:_projectToView.name];
    [_projectTypeTextField setText:_projectToView.type];
    [_projectClientTextField setText:_projectToView.clientName];
    [_projectManagerTextField setText:_projectToView.manager];
    [_isActiveSwitch setOn:_projectToView.isActive animated:YES];
    
    // Disable user interaction on the IBOutlets
    [_projectClientTextField setUserInteractionEnabled:FALSE];
    [_projectTypeTextField setUserInteractionEnabled:FALSE];
    [_projectClientTextField setUserInteractionEnabled:FALSE];
    [_projectManagerTextField setUserInteractionEnabled:FALSE];
    [_isActiveSwitch setUserInteractionEnabled:FALSE];
}

-(IBAction)edit:(id)sender
{
    // Enable user interaction on the IBOutlets
    [_projectClientTextField setUserInteractionEnabled:TRUE];
    [_projectTypeTextField setUserInteractionEnabled:TRUE];
    [_projectClientTextField setUserInteractionEnabled:TRUE];
    [_projectManagerTextField setUserInteractionEnabled:TRUE];
    [_isActiveSwitch setUserInteractionEnabled:TRUE];
    
    [_projectNameTextField becomeFirstResponder];
    
    _isEditing = TRUE;

}

#pragma mark -

#pragma mark -
#pragma mark IBActions

-(IBAction)save:(id)sender
{
    // Get Default Realm
    RLMRealm *realm = [RLMRealm defaultRealm];
    
    NSString *message = @"Project added successfully";
    
    // Fetch the current Developer
    RLMResults<Developer *> *developer = [Developer allObjects];
    NSLog(@"Results Count %lu", (unsigned long)developer.count);
    Developer *currentDeveloper = [developer firstObject];
    
    // Save project with transaction
    [realm beginWriteTransaction];
    
    Project *projectToAdd;
    
    // Decide to update or add
    if (_isEditing)
    {
        // Create the Project Object
        _projectToView.name = _projectNameTextField.text;
        _projectToView.isActive = _isActiveSwitch.isOn;
        _projectToView.clientName = _projectClientTextField.text;
        _projectToView.manager = _projectManagerTextField.text;
        _projectToView.type = _projectTypeTextField.text;
        
        //Update the existing project
        [Project createOrUpdateInRealm:realm withValue:_projectToView];
    }
    else
    {
        // Create the Project Object
        projectToAdd = [[Project alloc] init];
        projectToAdd.name = _projectNameTextField.text;
        projectToAdd.code = _projectCodeLabel.text;
        projectToAdd.isActive = _isActiveSwitch.isOn;
        projectToAdd.clientName = _projectClientTextField.text;
        projectToAdd.manager = _projectManagerTextField.text;
        projectToAdd.type = _projectTypeTextField.text;
        
        // Add New project
        [realm addObject:projectToAdd];
    }
    
    [realm commitWriteTransaction];
    
    if (!_isEditing)
    {
        // Save to Realm with transaction
        [realm beginWriteTransaction];
        // Link demo project with current developer
        [currentDeveloper.projects addObject:projectToAdd];
        [Developer createOrUpdateInRealm:realm withValue:currentDeveloper];
        [realm commitWriteTransaction];
        
    }
    else
    {
        // No need to update the current developer
        message = @"Project updated successfully";
    }


    UIAlertView *successAlert = [[UIAlertView alloc] initWithTitle:@"Success" message:message delegate:self cancelButtonTitle:@"Okay" otherButtonTitles:nil, nil];
    [successAlert show];
}

#pragma mark -

#pragma mark -
#pragma mark UISwitch


-(IBAction)switchValueChanges:(id)sender
{
    // Nothing to do here as of now.
}

#pragma mark -

#pragma mark -
#pragma mark UItextField Delegates

-(void)textFieldDidEndEditing:(UITextField *)textField
{
    // Validate that all the fields are filled and then enable Save bar button item
    BOOL allFieldsFilled = TRUE;
    
    if (_projectNameTextField.text.length == 0) {
        allFieldsFilled = FALSE;
    }
    
    if (_projectTypeTextField.text.length == 0) {
        allFieldsFilled = FALSE;
    }
    
    if (_projectClientTextField.text.length == 0) {
        allFieldsFilled = FALSE;
    }
    
    if (_projectManagerTextField.text.length == 0) {
        allFieldsFilled = FALSE;
    }
    
    if (allFieldsFilled) {
        [_saveBarButtonItem setEnabled:TRUE];
    }
}

-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    return TRUE;
}

#pragma mark -

#pragma mark -
#pragma mark UIAlertView Delegates


-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark -

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
